{"version":3,"sources":["components/UserStatsGraphs/styles.ts","components/UserStatsGraphs/index.tsx"],"names":["UserStatsGraphs","styled","section","GraphItem","div","TotalStats","data","useState","graph","setGraph","total","setTotal","useEffect","graphData","map","item","x","title","y","acessos","stat","reduce","prev","atual","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","alignment"],"mappings":"kJAEaA,EAAkBC,IAAOC,QAAV,6PAefC,EAAYF,IAAOG,IAAV,+IAOTC,EAAaJ,YAAOE,EAAPF,CAAH,mJ,kCCsBRD,UAxCf,YAA+D,IAApCM,EAAmC,EAAnCA,KAAmC,EAClCC,mBAAqC,IADH,mBACrDC,EADqD,KAC9CC,EAD8C,OAElCF,mBAAS,GAFyB,mBAErDG,EAFqD,KAE9CC,EAF8C,KAa5D,OATAC,qBAAU,WACR,IAAMC,EAAYP,EAAKQ,KAAI,SAACC,GAAD,MAAW,CAAEC,EAAGD,EAAKE,MAAOC,GAAIH,EAAKI,YAEhER,EACEL,EAAKQ,KAAI,SAACM,GAAD,OAAWA,EAAKD,WAASE,QAAO,SAACC,EAAMC,GAAP,OAAiBD,EAAOC,IAAO,IAE1Ed,EAASI,KACR,CAACP,IAGF,cAAC,IAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,UACE,0CAAaI,OAEf,cAAC,EAAD,UACE,cAAC,IAAD,CACEJ,KAAME,EACNgB,YAAa,GACbC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDC,MAAO,CACLxB,KAAM,CAAEyB,YAAa,GAAKC,OAAQ,OAAQC,YAAa,GACvDC,OAAQ,CAAEC,SAAU,GAAIC,KAAM,aAIpC,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYC,UAAU,QAAQ/B,KAAME","file":"static/js/4.d5ee40dd.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const UserStatsGraphs = styled.section`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  margin-bottom: 2rem;\n\n  .VictoryContainer {\n    height: initial !important;\n  }\n\n  @media (max-width: 40rem) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const GraphItem = styled.div`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 0.2rem;\n  display: grid;\n  align-items: center;\n`;\n\nexport const TotalStats = styled(GraphItem)`\n  grid-column: 1/ 3;\n  padding: 2rem;\n  font-size: 2rem;\n\n  @media (max-width: 40rem) {\n    grid-column: 1;\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport { AnimeLeft } from \"styles\";\nimport { UserStatsData } from \"types/components/UserStatsGraphs\";\nimport * as S from \"./styles\";\nimport { VictoryPie, VictoryChart, VictoryBar } from \"victory\";\n\nfunction UserStatsGraphs({ data }: { data: UserStatsData[] }) {\n  const [graph, setGraph] = useState<{ x: string; y: number }[]>([]);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const graphData = data.map((item) => ({ x: item.title, y: +item.acessos }));\n\n    setTotal(\n      data.map((stat) => +stat.acessos).reduce((prev, atual) => prev + atual, 0)\n    );\n    setGraph(graphData);\n  }, [data]);\n\n  return (\n    <AnimeLeft>\n      <S.UserStatsGraphs>\n        <S.TotalStats>\n          <p>Acessos: {total}</p>\n        </S.TotalStats>\n        <S.GraphItem>\n          <VictoryPie\n            data={graph}\n            innerRadius={50}\n            padding={{ top: 20, bottom: 20, left: 80, right: 80 }}\n            style={{\n              data: { fillOpacity: 0.9, stroke: \"#fff\", strokeWidth: 2 },\n              labels: { fontSize: 14, fill: \"#333\" },\n            }}\n          />\n        </S.GraphItem>\n        <S.GraphItem>\n          <VictoryChart>\n            <VictoryBar alignment=\"start\" data={graph}></VictoryBar>\n          </VictoryChart>\n        </S.GraphItem>\n      </S.UserStatsGraphs>\n    </AnimeLeft>\n  );\n}\n\nexport default UserStatsGraphs;\n"],"sourceRoot":""}